import { connect } from 'react-redux'
import React, { Component } from 'react'
import { fetchCoin } from 'actions'
import R from 'ramda'
import getCoin from 'selectors'
import { browserHistory } from 'react-router'
import TradingViewWidget, { Themes } from 'react-tradingview-widget'
import Menu from '../menu'
import { Link } from 'react-router'
import { fetchPrice } from 'actions'
import { getCryptoCurrency } from 'selectors'


class Coin extends Component {

    containerElementId = 'tradingview_0ce8npm 8'
    tradingViewInstance = null

    componentDidMount() {
            this.props.fetchCoin(this.props.params.id),
            this.props.fetchPrice(),
            window.scrollTo(0, 0)
    }

   getSymbol = (e) => {
                  browserHistory.push(e),
                 this.props.fetchCoin(e),
                  this.props.fetchPrice(),
                      window.scrollTo(0, 0)

        }

    renderPrice_table_Charts (prices, index)  {

        let
            percent = prices.percent_change_24h,
            color = percent < 0 ? 'red' : 'rgb(2, 214, 19)'
        return (
            <tr key={index} onClick={() => this.getSymbol(prices.id)}>
                <td  >{prices.symbol}</td>
                <td>{prices.price_usd}$ </td><td><a style={{ color }}>({percent})%</a></td>
                <td>Short</td>
            </tr>
        )
    }






    render() {
        const { coin, prices } = this.props
        const goin = coin.price_usd
        const will = goin
        document.title = `Trade | ${coin.symbol} ${will}$`
        console.log(this.props, 'coin==',  coin)
        let
            percent = coin.percent_change_24h,
            color = percent < 0 ? 'red' : 'rgb(2, 214, 19)'
        const
            coinsymbol = coin.symbol === 'BTC' || coin.symbol === 'ETH' ? coin.symbol + 'USD' : coin.symbol + 'ETH'

        return (
            coin
                ? <div>
                    <div>
                        <div className="balance-header">
                            <div className="header-overlay">
                                <Menu />
                                <div className="price-header-content">
                                    <h2 className="price-header-title">Trade - yourself </h2>
                                    <p className="price-header-text"><Link to='/signup'><a style={{ color: 'orange' }}>Sing up</a></Link> and trade without commissions</p>
                                </div>{/* header-content */}
                            </div>{/* header-overlay */}
                        </div>{/* balance-header */}
                        <div className="balance-container">
                            <div className="wrapper">
                                <div className="balance-empty-block">

                                    <TradingViewWidget
                                        symbol={coinsymbol}
                                        theme={Themes.Light}
                                        locale="fr"
                                        autosize
                                    />

                                </div>{/* balance-empty-block */}
                                <div className="balance-right-block">
                                    <span><h2><a style={{ color: '#7F8081' }}>{coin.name}</a></h2></span>
                                    <hr />
                                    <span><h5>LAST PRICE ETH</h5> {coin.price_eth}</span>
                                    <hr />
                                    <span><h5>VOLUME ETH</h5> {coin.market_cap_eth}</span>
                                    <hr />
                                    <span><h5>PERCENT 24H</h5><a style={{ color }}> ({percent})%</a></span>
                                    <hr />
                                    <span>Your connect : <a style={{ color: 'rgba(37, 204, 107, 0.877)' }}>True</a></span>

                                </div>{/* balance-empty-block */}
                            </div>{/* wrapper */}
                        </div>{/* balance-container */}
                        <div className="trade-container">
                            <div className="wrapper">
                                <div className="trade-form">
                                    <b className="trade-form-title">Buy</b>
                                    <form action="get">
                                        <span className="trade-form-balance">Balance: <span className="trade-form-sum_buy">0 eth</span></span>
                                        <div className="trade-form-row">
                                            <span>Price</span>
                                            <input type="text" value='1' />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-row">
                                            <span>Amount</span>
                                            <input type="text" value={coin.price_eth} />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-row">
                                            <span>Total</span>
                                            <input type="text" value='0' />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-btn-container">
                                            <button className="green-btn">Buy</button>
                                            <button className="orange-btn">Order</button>
                                        </div>{/* trade-form-btn-container */}
                                    </form>
                                </div>{/* trade-form */}
                                <div className="trade-form">
                                    <b className="trade-form-title">Sell</b>
                                    <form action="get">
                                        <span className="trade-form-balance">Balance: <span className="trade-form-sum_sell">0 eth</span></span>
                                        <div className="trade-form-row">
                                            <span>Price:</span>
                                            <input type="text" />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-row">
                                            <span>Amount:</span>
                                            <input type="text" />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-row">
                                            <span>total:</span>
                                            <input type="text" />
                                        </div>{/* trade-form-row */}
                                        <div className="trade-form-btn-container">
                                            <button className="green-btn">Sell</button>
                                            <button className="orange-btn">Order</button>
                                        </div>{/* trade-form-btn-container */}
                                    </form>
                                </div>{/* trade-form */}
                            </div>{/* wrapper */}
                        </div>{/* trade-container */}
                        <div className="balance-info">
                            <div className="wrapper">
                                <h4><p className='colpb'>Cryptocurrency</p></h4>
                                <br /><hr className="style18" />

                                <div className="balance-tab-header">
                                    <table border={1}>
                                        <tbody><tr><td>Name</td><td>Amont</td><td>Date</td><td>Bot do short/long</td></tr>
                                        </tbody></table>
                                </div>{/* balance-tab */}
                                <div className="balance-tab">
                                    <table border={1}>
                                        <tbody>
                                            {prices.map((prices, index) => this.renderPrice_table_Charts(prices, index))}
                                        </tbody></table>
                                </div>{/* balance-tab */}
                                
                            </div>{/* wrapper */}
                        </div>{/* balance-info */}

                        <div className="balance-info">
                            <div className="wrapper">
                            
                                {(this.props.hideButton) ? <div><h4><p className='colpb'>Balance Histori</p></h4><br />
                                    <div className="balance-tab-header">
                                        <table border={1}>
                                            <tbody><tr><td>Amont</td><td>Balance</td><td>Date</td><td>Profit:</td></tr>
                                            </tbody></table>
                                    </div>{/* balance-tab */}
                                    <div className="balance-tab-history">
                                        <table border={1}>
                                            <tbody>
                                                <tr><td>-</td>
                                                    <td>-</td><td><a>-</a></td>
                                                    <td>null</td>
                                                </tr>
                                            </tbody></table>
                                    </div>{/* balance-tab */}
                                </div>
                                    :
                                    <div>                               <h4><p className='colpb'>Balance Histori</p></h4>
                                        <button className="footer-menu-btn1">Login</button><br />
                                        <button className="footer-menu-btn1">Sign Up</button></div>}
                                <br />
                            </div>{/* wrapper */}

                        </div>{/* balance-info */}

                        <div className="footer">
                            <div className="wrapper">
                                <div className="footer-container">
                                    <div className="footer-menu">
                                        <span className="footer-menu-title">Help &amp; Support</span>
                                        <button className="footer-menu-btn">read more</button>
                                    </div>{/* footer-menu */}
                                    <div className="footer-menu">
                                        <span className="footer-menu-title">FAQ</span>
                                        <button className="footer-menu-btn">read more</button>
                                    </div>{/* footer-menu */}
                                </div>{/* footer-container */}
                                <p className="footer-text">Packages for mobile, IoT, front end, back end, robotics… everything you need to start building amazing things.</p>
                            </div>{/* wrapper */}
                            <p className="footer-copyright">© 2012 – 2018, www.sitename.by</p>
                        </div>{/* footer */}
                    </div>

                </div>
                :
                <h1>Coin have a trubble , maybee it's delisted or hui ego znaet</h1>
        )

    }
}

const mapDispatchToProps = {
    fetchCoin,
    fetchPrice
}





//const makeCoinSelector = () => (state, ownProps) => R.prop(ownProps.params.id.toLowerCase(), state.coin)
//
//const makeMapStateToProps = () => (state, ownProps) => {
//
//
//    const coinSelector = makeCoinSelector();
//
//    return {
//        coin: coinSelector(state, ownProps),
//        prices: getCryptoCurrency(state)
//
//    }
//}

const mapStateToProps = state => ({
   coin : state.coin,
   prices: getCryptoCurrency(state)
})


export default connect(mapStateToProps, mapDispatchToProps)(Coin)


//export default connect(makeMapStateToProps, mapDispatchToProps)(Coin)






